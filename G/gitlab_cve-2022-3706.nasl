#%NASL_MIN_LEVEL 80900
##
# (C) Tenable, Inc.
##

include('compat.inc');

if (description)
{
  script_id(167071);
  script_version("1.6");
  script_set_attribute(attribute:"plugin_modification_date", value:"2022/12/08");

  script_cve_id("CVE-2022-3706");
  script_xref(name:"IAVA", value:"2022-A-0468-S");

  script_name(english:"GitLab 7.14 < 15.3.5 / 15.4 < 15.4.4 / 15.5 < 15.5.2 Improper Authorization");

  script_set_attribute(attribute:"synopsis", value:
"A source control application running on the remote web server is affected by an improper authorization vulnerability.");
  script_set_attribute(attribute:"description", value:
"According to its self-reported version, the instance of GitLab running on the remote web server is 7.14 prior to
15.3.5, 15.4 prior to 15.4.4, or 15.5 prior to 15.5.2. It is, therefore, affected by an improper authorization 
vulnerability, allowing malicious users retrying a job in a downstream pipeline to take ownership of the retried jobs 
in the upstream pipeline even if they don't have access to that project.

Note that Nessus has not tested for this issue but has instead relied only on the application's self-reported version
number.");
  # https://about.gitlab.com/releases/2022/11/02/security-release-gitlab-15-5-2-released/#retrying-a-job-in-a-downstream-pipeline-allows-the-retrying-user-to-take-ownership-of-the-retried-jobs-in-upstream-pipelines
  script_set_attribute(attribute:"see_also", value:"http://www.nessus.org/u?127d613e");
  script_set_attribute(attribute:"solution", value:
"Upgrade to GitLab version 15.3.5, 15.4.4, 15.5.2, or later.");
  script_set_attribute(attribute:"agent", value:"unix");
  script_set_cvss_base_vector("CVSS2#AV:N/AC:L/Au:S/C:N/I:P/A:N");
  script_set_cvss_temporal_vector("CVSS2#E:U/RL:OF/RC:C");
  script_set_cvss3_base_vector("CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N");
  script_set_cvss3_temporal_vector("CVSS:3.0/E:U/RL:O/RC:C");
  script_set_attribute(attribute:"cvss_score_source", value:"CVE-2022-3706");

  script_set_attribute(attribute:"exploitability_ease", value:"No known exploits are available");

  script_set_attribute(attribute:"vuln_publication_date", value:"2022/11/02");
  script_set_attribute(attribute:"patch_publication_date", value:"2022/11/02");
  script_set_attribute(attribute:"plugin_publication_date", value:"2022/11/08");

  script_set_attribute(attribute:"plugin_type", value:"combined");
  script_set_attribute(attribute:"cpe", value:"cpe:/a:gitlab:gitlab");
  script_set_attribute(attribute:"stig_severity", value:"I");
  script_end_attributes();

  script_category(ACT_GATHER_INFO);
  script_family(english:"CGI abuses");

  script_copyright(english:"This script is Copyright (C) 2022 and is owned by Tenable, Inc. or an Affiliate thereof.");

  script_dependencies("gitlab_webui_detect.nbin", "gitlab_nix_installed.nbin");
  script_require_keys("installed_sw/GitLab");

  exit(0);
}

include('vcf.inc');

var app = 'GitLab';

var app_info = vcf::combined_get_app_info(app:app);

# Remote detection can only get the first two segments: e.g. <major_version>.<minor_version>
# <major_version>.<minor_version>.X is harder to be certain about.  
# Anything between the highest and lowest fixed versions requires paranoia if only 2 segments
# Adjust the following regex accordingly for each fixed version
if (report_paranoia < 2 && max_index(app_info.parsed_version[0]) < 3 
    && app_info.version =~ "^(15\.[345]([^0-9]|$))")
  audit(AUDIT_POTENTIAL_VULN, app, app_info.version);

var constraints = [
  { 'min_version' : '7.14', 'fixed_version' : '15.3.5' },
  { 'min_version' : '15.4', 'fixed_version' : '15.4.4' },
  { 'min_version' : '15.5', 'fixed_version' : '15.5.2' }
];

vcf::check_version_and_report(
    app_info:app_info,
    constraints:constraints,
    severity:SECURITY_WARNING
); 