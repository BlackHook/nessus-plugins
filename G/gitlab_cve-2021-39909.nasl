#%NASL_MIN_LEVEL 70300
##
# (C) Tenable, Inc.
##

include('deprecated_nasl_level.inc');
include('compat.inc');

if (description)
{
  script_id(159921);
  script_version("1.4");
  script_set_attribute(attribute:"plugin_modification_date", value:"2022/07/26");

  script_cve_id("CVE-2021-39909");
  script_xref(name:"IAVA", value:"2021-A-0523-S");

  script_name(english:"GitLab 11.1.0 < 14.2.6 / 11.2.0 < 14.3.4 / 11.3.0 < 14.4.1 Approval Bypass");

  script_set_attribute(attribute:"synopsis", value:
"A source control application running on the remote web server is affected by an approval bypass vulnerability.");
  script_set_attribute(attribute:"description", value:
"According to its self-reported version, the instance of GitLab running on the remote web server is 11.1.0 prior to
14.2.6, 11.2.0 prior to 14.3.4, or 11.3.0 prior to 14.4.1. It is, therefore, affected by an approval bypass
vulnerability that can allow an attacker to bypass CODEOWNERS Merge Request approval requirement under
rare circumstances.

Note that Nessus has not tested for this issue but has instead relied only on the application's self-reported version
number.");
  # https://about.gitlab.com/releases/2021/10/28/security-release-gitlab-14-4-1-released/#improper-access-control-allows-merge-request-creator-to-bypass-locked-status
  script_set_attribute(attribute:"see_also", value:"http://www.nessus.org/u?c8521058");
  script_set_attribute(attribute:"solution", value:
"Upgrade to GitLab version 14.2.6, 14.3.4, 14.4.1 or later.");
  script_set_cvss_base_vector("CVSS2#AV:N/AC:M/Au:S/C:N/I:P/A:N");
  script_set_cvss_temporal_vector("CVSS2#E:U/RL:OF/RC:C");
  script_set_cvss3_base_vector("CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N");
  script_set_cvss3_temporal_vector("CVSS:3.0/E:U/RL:O/RC:C");
  script_set_attribute(attribute:"cvss_score_source", value:"CVE-2021-39909");

  script_set_attribute(attribute:"exploitability_ease", value:"No known exploits are available");

  script_set_attribute(attribute:"vuln_publication_date", value:"2021/04/11");
  script_set_attribute(attribute:"patch_publication_date", value:"2021/04/11");
  script_set_attribute(attribute:"plugin_publication_date", value:"2022/04/20");

  script_set_attribute(attribute:"plugin_type", value:"remote");
  script_set_attribute(attribute:"cpe", value:"cpe:/a:gitlab:gitlab");
  script_set_attribute(attribute:"stig_severity", value:"I");
  script_end_attributes();

  script_category(ACT_GATHER_INFO);
  script_family(english:"CGI abuses");

  script_copyright(english:"This script is Copyright (C) 2022 and is owned by Tenable, Inc. or an Affiliate thereof.");

  script_dependencies("gitlab_webui_detect.nbin");
  script_require_keys("installed_sw/GitLab");
  script_require_ports("Services/www", 80, 443);

  exit(0);
}

include('vcf.inc');
include('http.inc');

var app = 'GitLab';
var port = get_http_port(default:80);

var app_info = vcf::combined_get_app_info(app:app);

# Remote detection can only get the first two segments: e.g. <major_version>.<minor_version>
# <major_version>.<minor_version>.X is harder to be certain about.  
# Anything between the highest and lowest 'fixed_versions' requires paranoia if only 2 segments
# Adjust the following regex accordingly
if (report_paranoia < 2 && max_index(app_info.parsed_version[0]) < 3 && app_info.version =~ "^14\.[2-4]([^0-9]|$)")
  audit(AUDIT_POTENTIAL_VULN, app, app_info.version, port);

var constraints = [
  { 'min_version' : '11.1.0', 'fixed_version' : '14.2.6' },
  { 'min_version' : '14.3.0', 'fixed_version' : '14.3.4' },
  { 'min_version' : '14.4.0', 'fixed_version' : '14.4.1' }
];

vcf::check_version_and_report(
    app_info:app_info,
    constraints:constraints,
    severity:SECURITY_NOTE
);