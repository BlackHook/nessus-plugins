#
# (C) Tenable Network Security. Inc.
#

include("compat.inc");

if (description)
{
  script_id(63074);
  script_version("1.8");
  script_set_attribute(attribute:"plugin_modification_date", value:"2022/10/10");

  script_name(english:"VMware OVF Tool Installed");
  script_summary(english:"Checks for VMware OVF Tool");

  script_set_attribute(attribute:"synopsis", value:"A command line utility is installed on the remote host.");
  script_set_attribute(attribute:"description", value:
"VMware OVF Tool, a command line utility that supports importing and
exporting of OVF templates, is installed on the remote Windows host.");
  # https://code.vmware.com/web/dp/tool/ovf/4.3.0
  script_set_attribute(attribute:"see_also", value:"http://www.nessus.org/u?bada104b");
  script_set_attribute(attribute:"solution", value:"n/a");
  script_set_attribute(attribute:"risk_factor", value:"None");

  script_set_attribute(attribute:"plugin_publication_date", value:"2012/11/28");

  script_set_attribute(attribute:"plugin_type", value:"local");
  script_set_attribute(attribute:"cpe", value:"cpe:/a:vmware:ovf_tool");
  script_set_attribute(attribute:"asset_inventory", value:"True");
  script_set_attribute(attribute:"asset_inventory_category", value:"software_enumeration");
  script_set_attribute(attribute:"agent", value:"windows");
  script_end_attributes();

  script_category(ACT_GATHER_INFO);
  script_family(english:"Windows");

  script_copyright(english:"This script is Copyright (C) 2012-2022 and is owned by Tenable, Inc. or an Affiliate thereof.");

  script_dependencies("smb_hotfixes.nasl");
  script_require_keys("SMB/Registry/Enumerated");
  script_require_ports(139, 445);

  exit(0);
}

include("audit.inc");
include("smb_func.inc");
include("smb_hotfixes.inc");
include("smb_hotfixes_fcheck.inc");
include("smb_reg_query.inc");
include("misc_func.inc");
include("install_func.inc");

app = 'VMware OVF Tool';
name   = kb_smb_name();
port   = kb_smb_transport();
login  = kb_smb_login();
pass   = kb_smb_password();
domain = kb_smb_domain();

registry_init();
hklm = registry_hive_connect(hive:HKEY_LOCAL_MACHINE, exit_on_fail:TRUE);
key = "SOFTWARE\VMware, Inc.\VMware OVF Tool\InstallPath";
path = get_registry_value(handle:hklm, item:key);

# Older versions only put the installation information in
# the uninstall registry
if (isnull(path))
{
  display_names = get_kb_list('SMB/Registry/HKLM/SOFTWARE/Microsoft/Windows/CurrentVersion/Uninstall/*/DisplayName');
  if (!isnull(display_names))
  {
    foreach key (keys(display_names))
    {
      display_name = display_names[key];
      if (display_name !~ 'VMware OVF Tool') continue;

      key = key - 'SMB/Registry/HKLM/' - 'DisplayName';
      key = str_replace(string:key, find:'/', replace:'\\');
      key += 'InstallLocation';
      path = get_registry_value(handle:hklm, item:key);
      break;
    }
  }
  if (isnull(path))
  {
    RegCloseKey(handle:hklm);
    close_registry();
    audit(AUDIT_NOT_INST, app);
  }
}
RegCloseKey(handle:hklm);
close_registry(close:FALSE);

share = hotfix_path2share(path:path);
exe = ereg_replace(pattern:'^[A-Za-z]:(.*)', replace:"\1\ovftool.exe", string:path);

rc = NetUseAdd(login:login, password:pass, domain:domain, share:share);
if (rc != 1)
{
  NetUseDel();
  audit(AUDIT_SHARE_FAIL, share);
}

fh = CreateFile(
  file:exe,
  desired_access:GENERIC_READ,
  file_attributes:FILE_ATTRIBUTE_NORMAL,
  share_mode:FILE_SHARE_READ,
  create_disposition:OPEN_EXISTING
);

if (isnull(fh))
{
  NetUseDel();
  audit(AUDIT_UNINST, app);
}

version = NULL;
fsize = GetFileSize(handle:fh);
off = 0;
pat = 'Generated by VMware ovftool';
while (off <= fsize)
{
  data = ReadFile(handle:fh, length:10240, offset:off);
  if (strlen(data) == 0) break;

  if (pat >< data)
  {
    version = strstr(data, pat);
    version = version - strstr(version, '(');
    version = version - (pat + ' ');
    version = str_replace(string:version, find:' ', replace:'');
    break;
  }
  off += 10240;
}

CloseFile(handle:fh);
NetUseDel();
if (isnull(version) || version !~ '^[0-9\\.]+$')
  audit(AUDIT_VER_FAIL, ((share - '$') + ':') + exe);

set_kb_item(name:'SMB/'+app+'/Path', value:path);
set_kb_item(name:'SMB/'+app+'/Version', value:version);

register_install(
  app_name:app,
  vendor : 'VMware',
  product : 'Ovf Tool',
  path:path,
  version:version,
  cpe:"cpe:/a:vmware:ovf_tool");

report_installs(app_name:app, port:port);

