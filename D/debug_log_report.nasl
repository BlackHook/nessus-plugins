#TRUSTED 64f8dfc80a7729724dfc357e9f620fc1c17549ea73131b5eab1da875c0d68d1e90d4ae8209f7762300292d7bccc52f60c9c0feba6db8b10b610223ebde0564aebc68b182545c6f52c898e670ea70df5c7a5c1a684f5855f88001cbe978f6ded5d5f9276a474f073bbb4c5f1a2a683ccf941c6d522357d08e495a0a234e99c2a38d2a676e33ade2eade89eb9a8e013cff24d8c3deef2d62c3ad83814cd26e7265173242a1f19a7c4e1577155b403d341358203145bde5f24946f80756f903af0a03ff7474fcedca896b1b2b8ae6cf19319658008b306946f7e42dd6041f064ba883c3ba931e6805580f1433199c8328098a4716a9537e4875be50f3a32f416060019f412c96b31d0b71c665af9f42b7a0b225c0d51ccc94b670a38ba8e26767f6e6868ecea5baa3df300b59edc53d67625e455f586bb4f5550b9a4caceb00b79fb69885d26e352c5d87864d2313ea679c9aa15e775ab2cc0198eff85b429a2c5bd4bc6d0a53d4e795c393344215242a528e7604fb750c3413b55e67243b29d828342e68c156dbf2a82e2124baf4f1b26c8805590b8dc114e8cfbe5f8b423090a4cb98d4e440ffda2780d4d58fe58cd9e3684cce7b5db3272894ac53caebaff5ad9db05c07742341a550c07f649bb1096d48d4b67996773f0795d498fbe9e44d420d67ebe6fda9596ac63b9663401249552e37548898928e77516b2379d22871d2
#TRUST-RSA-SHA256 51520c7bd716b0ec4f57d4dadbce8b7ca85d9f18820b48f4cfd599acbd89dc502ab092e4d50bc3bd1ca129e91624580b50bd592c97eeb441e7e5120faf06b4042a6a0e6f84d9eee1dbdcd64105700e8692b1082b09b2b05796f2f2180b33cb196886915244b3e583eea738fa48aa6b78353a6889b178731ecec8ad8e20fb0f8948d3ab72b155030acec7404b72ee4c607f4453a49f6ed0f8ade57e9430006b7dc2944bcdda92675eac2a58c8bb12608ff3d94bf3202140ea0198273bc5b4d69e36b7fefe4818b5de1b2c6b135a4501c6c260386f5f671f4fefadd59d3e35a68b453a2aef5482cc8dd3a86ed8cc082930156b9f407248f1a38de6b7c18a5b99faf7a30862ff0b03991cd064835679aac26cebd857eee78edeab6bdbf0d8ccde7cc36e39265f4b9959325f84e471147810b3dc01cc07288fbd5fd185d36f3a12dd56783e8eb85427c9aec9c92e05199e9d208d70c56ff5ad7f889c24ab20a692f3d92c957252c0a7de1cf7ad32bef37d6b08885647b8d4b978caac8d74dcd6a22f614469392869f16b763ac33ad12dd548a0481b38c84e36e23e68581d12804ee37b3752789c4913cc0ca1d2144087e31d99a3f7529c286837ed8906101c5182d82b72744ee2ee238d442414c25c4913e8eb7557783eede609ff56be7a3dcad1a7ad7a07c7c1e73fe695330d9675b762b0ffeabf2afa6e418d53caa8f17ed59e7a

#
# (C) Tenable Network Security, Inc.
#

include("compat.inc");

if (description)
{
  script_id(84239);

  script_version("1.19");
  script_set_attribute(attribute:"plugin_modification_date", value:"2023/05/31");

  script_name(english:"Debugging Log Report");
  script_summary(english:"Aggregates plugin debugging messages.");

  script_set_attribute(attribute:"synopsis", value:
"This plugin gathers the logs written by other plugins and reports
them.");
  script_set_attribute(attribute:"description", value:
"Logs generated by other plugins are reported by this plugin. Plugin
debugging must be enabled in the policy in order for this plugin
to run.");
  script_set_attribute(attribute:"solution", value:"n/a");
  script_set_attribute(attribute:"risk_factor", value:"None");

  script_set_attribute(attribute:"plugin_publication_date", value:"2015/06/17");

  script_set_attribute(attribute:"plugin_type", value:"combined");
  script_set_attribute(attribute:"agent", value:"all");
  script_set_attribute(attribute:"asset_inventory", value:"True");
  script_set_attribute(attribute:"always_run", value:TRUE);
  script_end_attributes();

  script_category(ACT_END2);
  script_family(english:"Settings");
  script_copyright(english:"This script is Copyright (C) 2015-2023 and is owned by Tenable, Inc. or an Affiliate thereof.");

  # Allow this to run for ninety minutes, unless the timeout is already
  # set above ninety minutes. Mostly for MDM debugging and Windows logging.
  if (int(get_preference("plugins_timeout")) <= 5400)
    script_timeout(5400);

  script_require_keys("global_settings/enable_plugin_debugging");
  exit(0);
}

include("misc_func.inc");
include("global_settings.inc");
include("spad_log_func.inc");

get_kb_item_or_exit("global_settings/enable_plugin_debugging");

#increasing the memory limits for MDM debug scans which can be rather large
if (defined_func("set_mem_limits"))
  set_mem_limits(max_alloc_size:1024*1024*1024, max_program_size:1024*1024*1024);

var logs = spad_log_get_report_attachments();
if(empty_or_null(logs))
  exit(0,"No log information to report.");

# Dump directly to plug-in output for SC / older versions
if(
   !isnull(get_preference("sc_version")) &&
   !get_kb_item("global_settings/enable_plugin_debugging")
)
{
  var report = 'The following plugin debug log(s) have been appended:\n\n';
  foreach var log (logs)
  {
    report += '=====================================================\n';
    report += 'Start log : '+log['name']+'\n';
    report += '=====================================================\n';
    report += log['value'];
    report += '=====================================================\n';
    report += 'End log : '+log['name']+'\n';
    report += '=====================================================\n';
  }
  security_note(port:0,extra:report);
}
else
{
  security_report_with_attachments(
    port        : 0,
    level       : 0,
    extra       : "Plugin debug log(s) have been attached.",
    attachments : logs
  );
}
